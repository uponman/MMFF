# YOLOv5 ðŸš€ by Ultralytics, AGPL-3.0 license

# Parameters
nc: 4  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.5  # layer channel multiple
backbonedn: 1
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backboned:
  # input 3*640*640
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2     args[ch_in, ch_out, kernel, stride, padding, groups]
   # 64*320*320 
  ]

backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 1-P1/2
   # 64*320*320
   [[-1, 0], 1, Concat, [1]],  # 2
   # 128*320*320
   [-1, 1, Conv, [128, 3, 2]],  # 3
   # 128*160*160
   [-1, 3, C3, [128]],  # 4
   # 128*160*160
   [-1, 1, Conv, [256, 3, 2]],  # 5
   # 256*80*80
   [-1, 6, C3, [256]],  # 6
   # 256*80*80
   [-1, 1, Conv, [512, 3, 2]],  # 7
   # 512*40*40
   [-1, 3, C3, [512]],  # 8
   # 512*40*40
   [-1, 1, Conv, [1024, 3, 2]],  # 9
   # 1024*20*20
   [-1, 9, C3, [1024]],  # 10
   # 1024*20*20
   [-1, 1, SPPF, [1024, 5]],  # 11
   # 1024*20*20
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 12
   # 512*20*20
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 13
   # 512*40*40
   [[-1, 8], 1, Concat, [1]],  # cat backbone P4  14
   # 1024*40*40
   [-1, 1, C3, [512, False]],  # 15
   # 512*40*40

   [-1, 1, Conv, [256, 1, 1]],  # 16
   # 256*40*40
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 17
   # 256*80*80
   [[-1, 6], 1, Concat, [1]],  # cat backbone P3 18
   # 512*80*80
   [-1, 1, C3, [256, False]],  # 19 (P3/8-small)
   # 256*80*80

   [-1, 1, Conv, [256, 3, 2]],  # 20
   # 256*40*40
   [[-1, 16], 1, Concat, [1]],  # cat head P4  21
   # 512*40*40
   [-1, 1, C3, [512, False]],  # 22 (P4/16-medium)
   # 512*40*40

   [-1, 1, Conv, [512, 3, 2]],  # 23
   # 512*20*20
   [[-1, 12], 1, Concat, [1]],  # cat head P5  24
   # 1024*20*20
   [-1, 1, C3, [1024, False]],  # 25 (P5/32-large)
   # 1024*20*20

   [[19, 22, 25], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)  26
  ]